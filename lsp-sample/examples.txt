integer b
integer h
float rectangle_area
float triangle_area

b = 15
h = 11

rectangle_area = b*h
triangle_area = rectangle_area/2

Put rectangle_area to output
Put "\n-----\n" to output
Put triangle_area to output

---------------------------------------------------------------------

// Triángulo de Pascal

integer rows
integer coef
integer space
integer i
integer j

rows = 8

for i = 0; i < rows; i = i + 1

   for space = 1; space <= rows-i; space = space + 1
      Put "  " to output
      
   for j = 0; j <= i; j = j + 1
   
      if j==0 or i==0
         coef = 1
      else
         coef = coef*(i-j+1)/j
      
      Put coef to output
      Put "   " to output
   
   Put "\n" to output

---------------------------------------------------------------------

// Arreglos en CORAL

integer array(?) userNums
float array(5) userVals

float x
float y
integer i

userNums.size = 5

for i = 0; i < userNums.size; i = i + 1
   userNums[i] = i * 2
   userVals[4-i] = (4*i)/2

x = userNums[3]
y = userVals[3]

for i = 0; i < userNums.size; i = i + 1
   Put   userNums[i]    -  x+y     to   output

---------------------------------------------------------------------

Function factorial_recursive(integer n) returns integer res
   // Base case: 1! = 1
   if (n == 1)
      res = 1
      
   // Recursive case: n! = n * (n-1)!
   else
      res = n * factorial_recursive(n-1)

Function Main() returns nothing
   integer evaluates
   evaluates = factorial_recursive(factorial_recursive(3))
   Put evaluates to output

---------------------------------------------------------------------

// Loops & Branches

float x
integer i
float xSquared

x = RandomNumber(-10,10)
Put "El número escogido fue:" to output
Put x to output
Put "\n" to output

if x >= 1
   // Print x^2 desc
   while x > 0
      xSquared = x * x
      Put xSquared to output with 3 decimal places
      Put "\n" to output
      x = x - 1
elseif x == 0
   // Print "0.00000000"
   Put x to output with 8 decimal places
else
   // Count even numbers down from 10 to 0
   for i = 10; i >= 0; i = i - 2
      Put i to output with 2 decimal places
      // Add 10-i spaces between numbers
      x = i
      while (x < 12)
         Put " " to output
         x = x + 2